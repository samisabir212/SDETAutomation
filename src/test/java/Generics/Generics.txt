GENERICS explained

Create a ArrayList without generics:

List list = new ArrayList();
list.add("hello");
String s=list.get(0);// Compile time error
String s = (String) list.get(0);//typecasting  you are casting "String" data type to List object to make it work


Create a ArrayList with generics:

List<String> list = new ArrayList<String>();
list.add("hello");
String s=list.get(0);
list.add(10);// Compile error you cant add an integer in a list that only takes "String" type objects.

Generics means that when you provide the diamond and supply A dataType inside the diamond that means
that that arrayList can only accept Type String Objects only!

same goes for every other collections such as hashmap
for example :

HashMap<String,Integer> PremierLeaguePointsByTeam = new HashMap<String,Integer>();

PremierLeaguePointsByTeam.put("Manchester City",31);
PremierLeaguePointsByTeam.put("Arsenal",21);
PremierLeaguePointsByTeam.put("Manchester United",29);
PremierLeaguePointsByTeam.put("Brighton",30);

as you can see the map Key can only hold String object and value of that key can only hold Integers


